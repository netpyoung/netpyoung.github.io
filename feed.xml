<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
    <title>넷평 남짓한 공간</title>
    <subtitle>netpyoung&#x27;s blog</subtitle>
    <link href="https://netpyoung.github.io/feed.xml" rel="self" type="application/atom+xml"/>
    <link href="https://netpyoung.github.io"/>
    <generator uri="https://www.getzola.org/">Zola</generator>
    <updated>2023-12-03T00:00:00+00:00</updated>
    <id>https://netpyoung.github.io/feed.xml</id>
    <entry xml:lang="en">
        <title>jekyll에서 zola로</title>
        <published>2023-12-03T00:00:00+00:00</published>
        <updated>2023-12-03T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://netpyoung.github.io/blog/jekyll_to_zola/" type="text/html"/>
        <id>https://netpyoung.github.io/blog/jekyll_to_zola/</id>
        
        <content type="html">&lt;p&gt;5년전에 블로그 글을 올리고 다시 새로운 글을 올린다. 블로그에 글을 쓰는것보다 재미있는 일들&#x2F;해야 할 들이 많았다.&lt;&#x2F;p&gt;
&lt;p&gt;홈페이지를 새로 정리하려고 하는데, 기존에 쓰던 방식인 jekyll을 실행시키자니, 디펜던시를 받던가 도커를 실행해야하는데 이 작업자체가 귀찮았다.
대안을 생각해보았고, 생성기를 jekyll에서 zola로 교체하였다.&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;이전글&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;netpyoung.github.io&#x2F;blog&#x2F;netpyoung.github.io_on_jekyll&#x2F;&quot;&gt;https:&#x2F;&#x2F;netpyoung.github.io&#x2F;blog&#x2F;netpyoung.github.io_on_jekyll&#x2F;&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;netpyoung.github.io&#x2F;blog&#x2F;githubpages_jekyll_v3&#x2F;&quot;&gt;https:&#x2F;&#x2F;netpyoung.github.io&#x2F;blog&#x2F;githubpages_jekyll_v3&#x2F;&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;jekyll을 썻던 이유&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;github 기본&lt;&#x2F;li&gt;
&lt;li&gt;추가 커밋 불필요&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;zola를 쓰는 이유&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;github기본 jekyll버전의 업데이트가 멈추었다
&lt;ul&gt;
&lt;li&gt;2023.12.03 현재
&lt;ul&gt;
&lt;li&gt;github&#x27;s jekyll current version &lt;code&gt;## 3.9.3 &#x2F; 2023-01-27&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;li&gt;github&#x27;s jekyll latest version &lt;code&gt;4.3.2&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;jekyll의 의존성 설치문제 짜증나서 안키게 된다&lt;&#x2F;li&gt;
&lt;li&gt;깔끔한 폴더구조
&lt;ul&gt;
&lt;li&gt;jekyll에선 _posts로 블로그를 넣었는데, 이젠 그냥 content에 넣으면 된다&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;그냥
&lt;ul&gt;
&lt;li&gt;rust를 쓰니 속도가 빨라보였다&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;후보들&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Cobalt: rust로 작성.
&lt;ul&gt;
&lt;li&gt;문서, 사용자층 빈약해서 패스&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;hugo: go로 작성.
&lt;ul&gt;
&lt;li&gt;문서, 사용자층 괜찮음&lt;&#x2F;li&gt;
&lt;li&gt;어색한 템플릿 언어 Go’s html&#x2F;template and text&#x2F;template&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;이름도 zola라 졸라 빨라 보인다&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;baggumyeonseo&quot;&gt;바꾸면서&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;만족
&lt;ul&gt;
&lt;li&gt;빠르다&lt;&#x2F;li&gt;
&lt;li&gt;셋업에 골머리 썩힐 필요가 없었다.
&lt;ul&gt;
&lt;li&gt;jekyll은 ruby베이스라서 버전, 라이브러리가 os문제를 가지면 꽤나 골치 아파진다.
&lt;ul&gt;
&lt;li&gt;그걸 피하려고 docker버전을 썼지만 docker도 셋팅하는게 귀찮다.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;zola의 tera
&lt;ul&gt;
&lt;li&gt;liquid랑 비슷해서 딱히 문제없음. hugo로 갔으면 go템플릿하느라 빡쳤을듯&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;깔끔해졌다
&lt;ul&gt;
&lt;li&gt;jekyll은 _posts폴더를 강제로 쓰도록하는데 zola는 괜찮았다&lt;&#x2F;li&gt;
&lt;li&gt;webpack쓰던걸 그냥 cdn쓰도록
&lt;ul&gt;
&lt;li&gt;jekyll에서 webpack썼는데 관리 귀찮&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;다행
&lt;ul&gt;
&lt;li&gt;글이 별로 없어서 마이그레이션 비용이 그리 크지 않았다&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;어색
&lt;ul&gt;
&lt;li&gt;index.md가 아닌 contents&#x2F;에 _index.md로 처리&lt;&#x2F;li&gt;
&lt;li&gt;slugify&#x27;s path
&lt;ul&gt;
&lt;li&gt;예를들어 파일이름이 &lt;code&gt;elisp_lexcical_dynamic&lt;&#x2F;code&gt;이런데 url은 &lt;code&gt;elisp-lexcical-dynamic&lt;&#x2F;code&gt;로 자동으로 바뀌는걸 방지하려면&lt;&#x2F;li&gt;
&lt;li&gt;config에서 &lt;code&gt;[slugify]&lt;&#x2F;code&gt;의 &lt;code&gt;paths = &quot;safe&quot;&lt;&#x2F;code&gt;로 해줘야 했다&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;별로
&lt;ul&gt;
&lt;li&gt;zola 마크다운에서 rendering코드를 넣지 못함
&lt;ul&gt;
&lt;li&gt;zola에는 shortcodes
&lt;ul&gt;
&lt;li&gt;templates&#x2F;shortcodes&#x2F;에 넣는다&lt;&#x2F;li&gt;
&lt;li&gt;근데 shortcode는 Tera 변수를 참조할 수 없음&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;앞으로
&lt;ul&gt;
&lt;li&gt;계속 쓰자
&lt;ul&gt;
&lt;li&gt;추후 github action의 유료화나 jekyll만 쓰도록 한다면 다시 바꾸는걸 고려해야겠지만 지금은 zola로 만족&lt;&#x2F;li&gt;
&lt;li&gt;다른 좋은 생성기가 있으면 고려해보자&lt;&#x2F;li&gt;
&lt;li&gt;아싸리 개인 생성기도 만드는 것도 재미있을거 같은데, 시간이 부족하다.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;search기능도 있는것 같은데 어떻게 쓰는지 알아봐야 할 것 같다&lt;&#x2F;li&gt;
&lt;li&gt;lispkorea.github.io도 zola로 바꿔봐야겠다&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;git&lt;&#x2F;span&gt;&lt;span&gt; tag&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; -a&lt;&#x2F;span&gt;&lt;span&gt; 1.9.0 2136b1c0e601ec1a68b94aa0daefd871769dff97&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; -m &lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;jekyll version&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;git&lt;&#x2F;span&gt;&lt;span&gt; tag&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; -a&lt;&#x2F;span&gt;&lt;span&gt; 2.0.0 73a536e07328bc298586e75c0a5b752073aaf6f3&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; -m &lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;zola verison&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h2 id=&quot;ref&quot;&gt;Ref&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.getzola.org&#x2F;documentation&#x2F;getting-started&#x2F;configuration&#x2F;&quot;&gt;설정&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.getzola.org&#x2F;documentation&#x2F;deployment&#x2F;github-pages&#x2F;&quot;&gt;github action&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;keats.github.io&#x2F;tera&#x2F;&quot;&gt;tera&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;templates&#x2F;&lt;&#x2F;th&gt;&lt;th&gt;&lt;&#x2F;th&gt;&lt;&#x2F;tr&gt;&lt;&#x2F;thead&gt;&lt;tbody&gt;
&lt;tr&gt;&lt;td&gt;index.html&lt;&#x2F;td&gt;&lt;td&gt;applied to the site homepage;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;section.html&lt;&#x2F;td&gt;&lt;td&gt;applied to all sections&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;page.html&lt;&#x2F;td&gt;&lt;td&gt;applied to all pages&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;404.html&lt;&#x2F;td&gt;&lt;td&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;anchor-link.html&lt;&#x2F;td&gt;&lt;td&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;sitemap.xml&lt;&#x2F;td&gt;&lt;td&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.getzola.org&#x2F;documentation&#x2F;templates&#x2F;sitemap&#x2F;&quot;&gt;https:&#x2F;&#x2F;www.getzola.org&#x2F;documentation&#x2F;templates&#x2F;sitemap&#x2F;&lt;&#x2F;a&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;split_sitemap_index.xml&lt;&#x2F;td&gt;&lt;td&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;atom.xml&lt;&#x2F;td&gt;&lt;td&gt;config.toml 바꿀 수 있다. &lt;a href=&quot;https:&#x2F;&#x2F;www.getzola.org&#x2F;documentation&#x2F;templates&#x2F;feeds&#x2F;&quot;&gt;https:&#x2F;&#x2F;www.getzola.org&#x2F;documentation&#x2F;templates&#x2F;feeds&#x2F;&lt;&#x2F;a&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;rss.xml&lt;&#x2F;td&gt;&lt;td&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;sitemap.xml&lt;&#x2F;td&gt;&lt;td&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;split_sitemap_index.xml&lt;&#x2F;td&gt;&lt;td&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;robots.txt&lt;&#x2F;td&gt;&lt;td&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;&#x2F;tbody&gt;&lt;&#x2F;table&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;brew&lt;&#x2F;span&gt;&lt;span&gt; install zola
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;zola&lt;&#x2F;span&gt;&lt;span&gt; init myblog
&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt; What &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;is&lt;&#x2F;span&gt;&lt;span&gt; the URL of your site? (https:&#x2F;&#x2F;example.com)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span&gt; https:&#x2F;&#x2F;netpyoung.github.io
&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt; Do &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;you&lt;&#x2F;span&gt;&lt;span&gt; want to enable Sass compilation? &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span&gt;Y&#x2F;n&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;]&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt; Do &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;you&lt;&#x2F;span&gt;&lt;span&gt; want to enable syntax highlighting? &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span&gt;y&#x2F;N&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;]&lt;&#x2F;span&gt;&lt;span&gt;: y
&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt; Do &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;you&lt;&#x2F;span&gt;&lt;span&gt; want to build a search index of the content? &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span&gt;y&#x2F;N&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;]&lt;&#x2F;span&gt;&lt;span&gt;: y
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;cd&lt;&#x2F;span&gt;&lt;span&gt; myblog
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;zola&lt;&#x2F;span&gt;&lt;span&gt; serve
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Web&lt;&#x2F;span&gt;&lt;span&gt; server is available at http:&#x2F;&#x2F;127.0.0.1:1111
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Options:
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;-i, --interface &lt;&#x2F;span&gt;&lt;span&gt;&amp;lt;INTERFACE&amp;gt;    Interface to bind on &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span&gt;default: 127.0.0.1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;]
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;-p, --port &lt;&#x2F;span&gt;&lt;span&gt;&amp;lt;PORT&amp;gt;              Which port to use &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span&gt;default: 1111&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;]
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;-o, --output-dir &lt;&#x2F;span&gt;&lt;span&gt;&amp;lt;OUTPUT_DIR&amp;gt;  by default &amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;public&lt;&#x2F;span&gt;&lt;span&gt;&amp;#39; dir in project root
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;-u, --base-url &lt;&#x2F;span&gt;&lt;span&gt;&amp;lt;BASE_URL&amp;gt;      Changes the base_url &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span&gt;default: 127.0.0.1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;]
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;-O, --open&lt;&#x2F;span&gt;&lt;span&gt;                     Open site in the default browser
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# .gitignore
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# public&#x2F;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# .DS_Store
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Why am I trying to move camera?</title>
        <published>2018-06-16T00:00:00+00:00</published>
        <updated>2018-06-16T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://netpyoung.github.io/blog/why-am-i-trying-to-move-camera/" type="text/html"/>
        <id>https://netpyoung.github.io/blog/why-am-i-trying-to-move-camera/</id>
        
        <content type="html">&lt;h2 id=&quot;naneun-wae-kamerareul-idongsikyeossneunga&quot;&gt;나는 왜 카메라를 이동시켰는가?&lt;&#x2F;h2&gt;
&lt;p&gt;퇴근 20분을 남기고, 동료 개발자가 &lt;code&gt;특정 위치에서 드래그 스킬 영역 표시가 의도한 바로 이동하지 않는다.&lt;&#x2F;code&gt;라고 말을 해온다. 평소같았으면 퇴근 20분 남기고 버그를 고치려고 하지 않지만, 어제까지 잘 되던게, 오늘 안되는거라 쉽게 발견할 수 있을거 같아 확인해 보기로 했다.&lt;&#x2F;p&gt;
&lt;p&gt;게임을 다시 시작하고 해당 위치로 이동하여 드래그 스킬을 사용해 보았다.&lt;&#x2F;p&gt;
&lt;p&gt;뭔가 이상하다. 특정 위치로 띄엄띄엄 이동한다.&lt;&#x2F;p&gt;
&lt;p&gt;&quot;나는 분명 UI 카메라에서 레이를 쏘아 충돌 지점에 드래그 스킬 영역이 표시되도록 시켰는데&quot;&lt;&#x2F;p&gt;
&lt;p&gt;유니티 에디터 하이라키창을 확인한다.&lt;&#x2F;p&gt;
&lt;p&gt;의도했던대로, UI카메라와 전투(케릭터) 카메라는 동일 위치에 있었다.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;그냥 한번 UI카메라를 이동시켜 보았다. - 의도없이 무의식적으로&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;p&gt;역시 결과는 같았다.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;다음 예상가능한 변수들을 생각해보았다.&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;콜라이더 안박혔나?&lt;&#x2F;li&gt;
&lt;li&gt;레이마스크를 제대로 지정안했나?&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;일단 레이쏘는 코드에 디버깅을 걸고 체크엔 트라이&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;레이마스크는 지정자체를 안하여서 레이마스크는 영향없고,(프로토단계여서 일단 레이마스크 씌우는 작업은 건너뛰었다).&lt;&#x2F;li&gt;
&lt;li&gt;콜라이더를 확인해보니, 바닥에 콜라이더가 없다..&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;드문드문 이동한것은 구조물에 박힌 콜라이더에 영향을 받은 것이였다.&lt;&#x2F;p&gt;
&lt;p&gt;사실 문제를 발견하고 고치는데까지는 별 시간이 걸리지 않았다. 하지만 더 큰 문제를 발견했는데. 왜 나는 생각하지않고 카메라를 이동시켰는가이다. 제대로 사고해보지않고 마치 잡혀라 하면서 아무데나 그물을 던지는 것과 같은 행동을 말이다. 신입이 오면 가장 주의깊게 살피고, 피드백 주는 부분이 그 부분인데, 내가 그러한 행동을 하고 있는게 참으로 부끄러웠다. 예전에 하던 그러한 기질이 방심했을때 올라온다. 조심하자.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title></title>
        <published>2018-04-11T00:00:00+00:00</published>
        <updated>2018-04-11T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://netpyoung.github.io/blog/opensource-github/" type="text/html"/>
        <id>https://netpyoung.github.io/blog/opensource-github/</id>
        
        <content type="html">&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;issues?utf8=%E2%9C%93&amp;amp;q=is%3Aissue+author%3Anetpyoung&quot;&gt;https:&#x2F;&#x2F;github.com&#x2F;issues?utf8=%E2%9C%93&amp;amp;q=is%3Aissue+author%3Anetpyoung&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;남 프로젝트&lt;&#x2F;p&gt;
&lt;p&gt;내 프로젝트
오타
나도 실 수 할 수 있다는 걸
문서 작성 능력 중요성&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>내가 php 싫어하는 이유</title>
        <published>2018-04-11T00:00:00+00:00</published>
        <updated>2018-04-11T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://netpyoung.github.io/blog/why_i_hate_php/" type="text/html"/>
        <id>https://netpyoung.github.io/blog/why_i_hate_php/</id>
        
        <content type="html">&lt;h1 id=&quot;naega-php-silheohaneun-iyu&quot;&gt;내가 php 싫어하는 이유&lt;&#x2F;h1&gt;
&lt;h2 id=&quot;hwangyeong&quot;&gt;환경&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;Unity 게임 클라이언트(C#)가 메인.&lt;&#x2F;li&gt;
&lt;li&gt;회사에서 로직만 깔짝 python 서버 다루어 봄.&lt;&#x2F;li&gt;
&lt;li&gt;여러가지 언어를 공부할때 php 언어공부도 함.&lt;&#x2F;li&gt;
&lt;li&gt;php를 실무에서 써본 적이 없음 &#x2F;&#x2F; 쓸 생각도 없음&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;hyeonsileseo-phpreul-sseuneun-onghohaneun-gaebalja-jungeseo-gwaencanheun-sarameul-bonjeogi-eobsda&quot;&gt;현실에서 php를 쓰는&#x2F;옹호하는 개발자 중에서 괜찮은 사람을 본적이 없다.&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;99%: 같이 일하기 싫은사람.&lt;&#x2F;li&gt;
&lt;li&gt;1% : php를 옹호하다 크게 대이고 다시 생각하게된 사람&lt;&#x2F;li&gt;
&lt;li&gt;0% : 같이 일하고 싶다라고 생각이 들만한 사람.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;taedo&quot;&gt;태도&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;99%: 같이 일하기 싫은사람.&lt;&#x2F;li&gt;
&lt;li&gt;똥고집&lt;&#x2F;li&gt;
&lt;li&gt;프로그래밍 언어를 깊이 공부하지 않음(심지어 php조차도)&lt;&#x2F;li&gt;
&lt;li&gt;타입에러는 기본&lt;&#x2F;li&gt;
&lt;li&gt;서버 스트레스테스트 방법을 모름&lt;&#x2F;li&gt;
&lt;li&gt;생각&#x2F;코딩 능력 결여 : 이슈를 늦게 처리하면서 문제를 불안정하고 수정.&lt;&#x2F;li&gt;
&lt;li&gt;이런 것들이 쌇여 개발자를 신뢰할 수 없음.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;tcp-udp-sokespeurogeuraemingeul-hal-su-eobseum&quot;&gt;tcp&#x2F;udp 소켓프로그래밍을 할 수 없음&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;다른 라이브러리 가져다 써야함.&lt;&#x2F;li&gt;
&lt;li&gt;실시간 로직을 기획단에서 배재하려고함.&lt;&#x2F;li&gt;
&lt;li&gt;네트워크 지식이 얕음&lt;&#x2F;li&gt;
&lt;li&gt;c#이라면 코드 공유라도 할 수 있지..&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;gyeolron&quot;&gt;결론&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;선입견이 생겼다. &lt;code&gt;php쓰는 사람과 같이 일하기 싫다.&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>AutoGenerated.DB.dll on Unity</title>
        <published>2017-03-08T00:00:00+00:00</published>
        <updated>2017-03-08T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://netpyoung.github.io/blog/data-flow/" type="text/html"/>
        <id>https://netpyoung.github.io/blog/data-flow/</id>
        
        <content type="html">&lt;h2 id=&quot;munjeinsig&quot;&gt;문제인식&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;클라이언트 코드 작성시 excel의 테이블명, 컬럼명과 동일하게 클래스를 만든다.&lt;&#x2F;li&gt;
&lt;li&gt;excel의 테이블명, 컬럼명과 동일하게 데이터베이스의 테이블과 컬럼을 만든다.&lt;&#x2F;li&gt;
&lt;li&gt;excel에 수정이 가해질때마다, class와 데이터를 변경시켜주는게 불편하다.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;baraneunjeom&quot;&gt;바라는점&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;excel의 테이블의 수정시, 클래스와 db갱신이 자동으로 되었으면 좋겠다.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;sidobangbeob&quot;&gt;시도방법&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;excel에서 class를 생성하여 dll로 묶는다.&lt;&#x2F;li&gt;
&lt;li&gt;dll을 로드하여, dll의 class명과 property로 db갱신을 한다.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;seolmyeong&quot;&gt;설명&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img src=&quot;https:&#x2F;&#x2F;github.com&#x2F;netpyoung&#x2F;nf.data-flow&#x2F;raw&#x2F;master&#x2F;flow.png&quot; alt=&quot;flow.png&quot; &#x2F;&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;netpyoung&#x2F;nf.data-flow&quot;&gt;https:&#x2F;&#x2F;github.com&#x2F;netpyoung&#x2F;nf.data-flow&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;플로우는 Rakefile 참조&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;hugi&quot;&gt;후기.&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;excel에 변경이 가해져도 클래스나 db에 신경을 덜 쓰게 되었다.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>AutoGenerated.Message.dll on Unity</title>
        <published>2017-03-08T00:00:00+00:00</published>
        <updated>2017-03-08T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://netpyoung.github.io/blog/protocol-flow/" type="text/html"/>
        <id>https://netpyoung.github.io/blog/protocol-flow/</id>
        
        <content type="html">&lt;h2 id=&quot;munjeinsig&quot;&gt;문제인식.&lt;&#x2F;h2&gt;
&lt;p&gt;message의 수정 추가시, 클라이언트 프로그래머가 매번 명칭과 인자에 따라 클래스를 수정한다.
단순 api통신은 dll하나로 만들어져서, 클라이언트 프로그래머가 별로 신경 쓰지않고, 다른 작업에 좀 더 집중하고 싶다.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;baraneunjeom&quot;&gt;바라는점.&lt;&#x2F;h2&gt;
&lt;p&gt;message 수정, 추가시 하나로 된 dll파일을 얻었으면 한다.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;sidobangbeob&quot;&gt;시도방법.&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;message에서 하나의 dll을 얻는다.&lt;&#x2F;li&gt;
&lt;li&gt;dll을 로드하여 sender를 생성한다.&lt;&#x2F;li&gt;
&lt;li&gt;sender와 앞선 dll을 하나로 묶는다.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;haegyeol&quot;&gt;해결&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img src=&quot;https:&#x2F;&#x2F;github.com&#x2F;netpyoung&#x2F;nf.protocol-flow&#x2F;raw&#x2F;master&#x2F;flow.png&quot; alt=&quot;flow.png&quot; &#x2F;&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;netpyoung&#x2F;nf.protocol-flow&quot;&gt;https:&#x2F;&#x2F;github.com&#x2F;netpyoung&#x2F;nf.protocol-flow&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;플로우는 Rakefile 참조&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;hugi&quot;&gt;후기.&lt;&#x2F;h2&gt;
&lt;p&gt;mesage의 추가 수정이 가해져도, 신경을 덜 쓰게 되었다.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Unity NPOI with IL2CPP</title>
        <published>2016-07-01T00:00:00+00:00</published>
        <updated>2016-07-01T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://netpyoung.github.io/blog/unity_npoi_bugreport/" type="text/html"/>
        <id>https://netpyoung.github.io/blog/unity_npoi_bugreport/</id>
        
        <content type="html">&lt;h2 id=&quot;npoiran&quot;&gt;NPOI란?&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;npoi.codeplex.com&#x2F;&quot;&gt;https:&#x2F;&#x2F;npoi.codeplex.com&#x2F;&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;Excel을 읽어들일 수 있는 POI Java project를 dotnet으로 구현한 것으로, net20, net40 dll을 제공하고 있다.&lt;&#x2F;li&gt;
&lt;li&gt;게임 개발을 하면서 데이터를 excel로 관리하는 경우가 많은데, 툴을 구현할 시 유용하다.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;munjeneun&quot;&gt;문제는?&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;iOS 디바이스에서 빌드해서 사용시, 문제가 있다는 것을 1년전 쯤에 빌드해보고 알고있었다.(그때는 IL2CPP나 개발 중이여서 추후에 보자고 덮어뒀었다.)&lt;&#x2F;li&gt;
&lt;li&gt;최근 혹시나 하는 마음에 빌드를 하였고, XCodeProject생성 빌드시 IL2CPP에서 문제가 발생하였다.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;haegyeolcaegeun&quot;&gt;해결책은?&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;이번에는 1년 전과는 달리 포럼에 &lt;a href=&quot;http:&#x2F;&#x2F;forum.unity3d.com&#x2F;threads&#x2F;il2cpp-build-error-unity5-3-5f1-personal-version.413861&#x2F;&quot;&gt;post&lt;&#x2F;a&gt;를 남기어 두었고, 관계자의 답글대로, Unity Editor의 Bug Report를 이용하여 버그리포트를 보냈다.&lt;&#x2F;li&gt;
&lt;li&gt;지금(5.3.5f1)에서는 .NET 2.0 Subset로 빌드하면 된다.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;issuetracker.unity3d.com&#x2F;issues&#x2F;ios-build-fails-with-net-2-dot-0-in-mscorlib-dot-dll&quot;&gt;issue&lt;&#x2F;a&gt;가 등록되었고, UnityQA에서 온 메일로 확인한 결과, 5.3.5p8에서는 이용할 수 있다고 한다. (ios device에서 excel reading이 가능해 질 것으로 본다)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Github Pages - Jekyll v3</title>
        <published>2016-02-15T00:00:00+00:00</published>
        <updated>2016-02-15T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://netpyoung.github.io/blog/githubpages_jekyll_v3/" type="text/html"/>
        <id>https://netpyoung.github.io/blog/githubpages_jekyll_v3/</id>
        
        <content type="html">&lt;h1 id=&quot;github-pages-jekyll-v3&quot;&gt;Github Pages - Jekyll v3&lt;&#x2F;h1&gt;
&lt;p&gt;오랜만에 블로그에서 사소한 내용을 수정후 커밋하니 다음과 같은 내용의 이메일이 도착했다.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;txt&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-txt &quot;&gt;&lt;code class=&quot;language-txt&quot; data-lang=&quot;txt&quot;&gt;&lt;span&gt;The page build completed successfully, but returned the following warning:
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;You are currently using the &amp;#39;redcarpet&amp;#39; Markdown engine, which will not be supported on GitHub Pages after May 1st. At that time, your site will use &amp;#39;kramdown&amp;#39; for markdown rendering instead. To suppress this warning, remove the &amp;#39;markdown&amp;#39; setting in your site&amp;#39;s &amp;#39;_config.yml&amp;#39; file and confirm your site renders as expected. For more information, see https:&#x2F;&#x2F;help.github.com&#x2F;articles&#x2F;updating-your-markdown-processor-to-kramdown.
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;GitHub Pages was recently upgraded to Jekyll 3.0. It may help to confirm you&amp;#39;re using the correct dependencies:
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;  https:&#x2F;&#x2F;github.com&#x2F;blog&#x2F;2100-github-pages-now-faster-and-simpler-with-jekyll-3-0
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;For information on troubleshooting Jekyll see:
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;  https:&#x2F;&#x2F;help.github.com&#x2F;articles&#x2F;using-jekyll-with-pages#troubleshooting
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;If you have any questions you can contact us by replying to this email.
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;내용인즉, 깃허브가 github-pages에서 쓰고있는 jekyll의 버전을 3으로 올린다는 내용이며, 이에 준하여 업데이트를 시켜주라는 말이였다.&lt;&#x2F;p&gt;
&lt;p&gt;github-pages페이지를 업데이트 시켜주고(오래간만에 gem update를...),&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;sudo&lt;&#x2F;span&gt;&lt;span&gt; gem update github-pages
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;나와같은 경우 다음의 라인이 문제가 되었다. 이제 github-pages를 이용시 highlighter부분과 markdown섹션을 신경쓸 필요가 없게되었다.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;yaml&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-yaml &quot;&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;highlighter&lt;&#x2F;span&gt;&lt;span&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;pygments
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;markdown&lt;&#x2F;span&gt;&lt;span&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;redcarpet
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;redcarpet&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;extensions&lt;&#x2F;span&gt;&lt;span&gt;: [&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;no_intra_emphasis&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;, &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;fenced_code_blocks&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;, &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;autolink&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;, &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;tables&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;, &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;with_toc_data&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;]
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;수정시, highlighter만 pygments로 나두면 다음과 같은 메시지로 이메일이 날라온다.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;txt&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-txt &quot;&gt;&lt;code class=&quot;language-txt&quot; data-lang=&quot;txt&quot;&gt;&lt;span&gt;The page build completed successfully, but returned the following warning:
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;You are attempting to use the &amp;#39;pygments&amp;#39; highlighter, which is currently unsupported on GitHub Pages. Your site will use &amp;#39;rouge&amp;#39; for highlighting instead. To suppress this warning, change the &amp;#39;highlighter&amp;#39; value to &amp;#39;rouge&amp;#39; in your &amp;#39;_config.yml&amp;#39;. For more information, see https:&#x2F;&#x2F;help.github.com&#x2F;articles&#x2F;page-build-failed-config-file-error&#x2F;#fixing-highlighting-errors.
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;처음 github-pages를 설정할때 highlighter, markdown 설정 부분에서 좀 애를 먹은 기억이 있어, 나는 이와같이 github-pages가 변화한것을 환영한다.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Boot : It&#x27;s not a build tool - it&#x27;s build tooling.</title>
        <published>2015-11-23T00:00:00+00:00</published>
        <updated>2015-11-23T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://netpyoung.github.io/blog/boot/" type="text/html"/>
        <id>https://netpyoung.github.io/blog/boot/</id>
        
        <content type="html">&lt;h1 id=&quot;boot&quot;&gt;Boot&lt;&#x2F;h1&gt;
&lt;h2 id=&quot;it-s-not-a-build-tool-it-s-build-tooling&quot;&gt;It&#x27;s not a build tool - it&#x27;s build tooling.&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;홈페이지: &lt;a href=&quot;http:&#x2F;&#x2F;boot-clj.com&#x2F;&quot;&gt;http:&#x2F;&#x2F;boot-clj.com&#x2F;&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;소스코드: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;boot-clj&#x2F;boot&quot;&gt;https:&#x2F;&#x2F;github.com&#x2F;boot-clj&#x2F;boot&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;img src=&quot;http:&#x2F;&#x2F;boot-clj.com&#x2F;assets&#x2F;images&#x2F;logos&#x2F;boot-logo-3.png&quot; alt=&quot;&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;boot는 &lt;a href=&quot;http:&#x2F;&#x2F;adzerk.com&#x2F;&quot;&gt;adzerk&lt;&#x2F;a&gt;라는 회사에서 만든 빌드 툴링(build tooling)이다.
&lt;ul&gt;
&lt;li&gt;adzerk는 ad serviing infrastructure를 제공해주는 회사이다.&lt;&#x2F;li&gt;
&lt;li&gt;stackexchange, bittorrent, reddit등이 이 회사의 서비스를 이용하고 있다.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;boot의 빌드 프로세스는, Tasks(Boot&#x27;s modular building blocks.)단위로 이루어 진다.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;boot-clj&#x2F;boot&#x2F;wiki&#x2F;Tasks&quot;&gt;Tasks&lt;&#x2F;a&gt;는 task middleware이다.&lt;&#x2F;li&gt;
&lt;li&gt;task middleware는 task handler로 제어한다.&lt;&#x2F;li&gt;
&lt;li&gt;이 task handler는 &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;boot-clj&#x2F;boot&#x2F;wiki&#x2F;Filesets&quot;&gt;Filesets&lt;&#x2F;a&gt;을 조작한다.&lt;&#x2F;li&gt;
&lt;li&gt;JVM에 관한 의존성관리는 &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;boot-clj&#x2F;boot&#x2F;wiki&#x2F;Pods&quot;&gt;Pods&lt;&#x2F;a&gt;에 의해 제어된다.&lt;&#x2F;li&gt;
&lt;li&gt;clean task가 없다. (Artifacts can never be stale)
&lt;ul&gt;
&lt;li&gt;의도하는 바는 알겠지만, clean에 대해서도 우아하게 처리할 수 있는 방안이 필요하다 라는 것이 내 개인적인 견해이다.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;drive.google.com&#x2F;uc?export=download&amp;amp;id=0B3j9XOWClsuYNXRxSU1VaVhlaDA&quot; alt=&quot;&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;leiningengwa-bigyohaeseo&quot;&gt;leiningen과 비교해서.&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;leiningen은 defproject하나로 관리되어, (물론 여러 트릭으로 우회할 순 있지만), 복잡한 상황에 대처하기에 부적합한 경우도 있다.&lt;&#x2F;li&gt;
&lt;li&gt;또한, 현재 leiningen은 &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;technomancy&#x2F;leiningen&#x2F;issues&#x2F;1752&quot;&gt;lein X auto&lt;&#x2F;a&gt;문제를 안고있다.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;community-tasks&quot;&gt;Community Tasks&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;boot-clj&#x2F;boot&#x2F;wiki&#x2F;Community-Tasks&quot;&gt;https:&#x2F;&#x2F;github.com&#x2F;boot-clj&#x2F;boot&#x2F;wiki&#x2F;Community-Tasks&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;Adzerk&#x27;s boot configurations for Clojure libraries
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;adzerk-oss&#x2F;bootlaces&quot;&gt;https:&#x2F;&#x2F;github.com&#x2F;adzerk-oss&#x2F;bootlaces&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;실행 가능한 파일로 만들어주는 tasks
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;adzerk-oss&#x2F;boot-jar2bin&quot;&gt;https:&#x2F;&#x2F;github.com&#x2F;adzerk-oss&#x2F;boot-jar2bin&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;lein-ancient처럼 dependencies 버전 체크.
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;martinklepsch&#x2F;boot-deps&quot;&gt;https:&#x2F;&#x2F;github.com&#x2F;martinklepsch&#x2F;boot-deps&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;쉘스크립트 실행
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;danielsz&#x2F;boot-shell&quot;&gt;https:&#x2F;&#x2F;github.com&#x2F;danielsz&#x2F;boot-shell&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mathias&#x2F;boot-restart&quot;&gt;https:&#x2F;&#x2F;github.com&#x2F;mathias&#x2F;boot-restart&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;notification기능
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jeluard&#x2F;boot-notify&quot;&gt;https:&#x2F;&#x2F;github.com&#x2F;jeluard&#x2F;boot-notify&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;example&quot;&gt;Example&lt;&#x2F;h2&gt;
&lt;p&gt;사실 이 글을 작성할때, 여러 예제를 만들어 넣을까 했는데... 다음 링크가 잘 나타난것 같다.&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;lionfacelemonface.wordpress.com&#x2F;2015&#x2F;01&#x2F;17&#x2F;boot-getting-started-with-clojure-in-10-minutes&#x2F;&quot;&gt;Boot: Getting Started With Clojure In &amp;lt; 10 Minutes&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;ref&quot;&gt;REF.&lt;&#x2F;h2&gt;
&lt;iframe width=&quot;640&quot; height=&quot;360&quot; src=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;embed&#x2F;TcnzB2tB-8Q?rel=0&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;&#x2F;iframe&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;speakerdeck.com&#x2F;mklappstuhl&#x2F;boot-build-tooling-for-clojure-script&quot;&gt;Boot: Build tooling for Clojure(script) by mklappstuhl&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;hashrocket.com&#x2F;blog&#x2F;posts&#x2F;the-front-end-development-environment-of-my-dreams&quot;&gt;Boot + Middleman: The ClojureScript development environment of my dreams&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;www.martinklepsch.org&#x2F;posts&#x2F;why-boot-is-relevant-for-the-clojure-ecosystem.html&quot;&gt;Why Boot is Relevant For The Clojure Ecosystem&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;www.slideshare.net&#x2F;metosin&#x2F;clojutre-build-tooling-with-boot-42006010&quot;&gt;ClojuTRE - Build tooling with Boot&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;martinklepsch&#x2F;tenzing&quot;&gt;Clojurescript application template using Boot&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;Let&amp;#39;s try piling up some other kinds of furniture and see how we feel about it, shall we?
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;I hope you have fun playing with it and remember, &amp;quot;Lisp Can Do It!&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt; - http:&#x2F;&#x2F;adzerk.com&#x2F;blog&#x2F;2014&#x2F;11&#x2F;clojurescript-builds-rebooted&#x2F;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>돈에 관한 이야기</title>
        <published>2015-11-14T00:00:00+00:00</published>
        <updated>2015-11-14T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://netpyoung.github.io/blog/a_story_about_money/" type="text/html"/>
        <id>https://netpyoung.github.io/blog/a_story_about_money/</id>
        
        <content type="html">&lt;h1 id=&quot;don&quot;&gt;돈?&lt;&#x2F;h1&gt;
&lt;p&gt;대학 입학하기 전이였다. 어느날 아버지가 밖에 좀 같이 가자고 하신다. 대충 감이 온다. 설마. 역시나 나를 대학교 안에 있는 은행에 데리고 가신다.
물론 내 돈은 아니지만, 할머니께서 내 등록금 하라고 내 통장에 넣으신 돈을 다른 곳으로 빼놓고, 등록금하라던 그 돈은 학자금 대출로 변했다.
어찌됐든 대학은 다니다 말았고. 전역하자마자 시작한 밀감 까대기(상하차)로 이자와 함께 학자금을 갚았다.&lt;&#x2F;p&gt;
&lt;p&gt;군대에 있을때였다. 이름 뒷글자만 따서 내가 록형이라고 부르는 친한 동기 형이 있는데, 이 형이 커피를 그리 좋아한다.
그날도 자판기에 가서 보니, 다름없이 자판기 커피를 손에 들고 있는데 표정이 별로이다. 카드를 잃어버렸다고. 일딴 빨리 정지시키라고 말을 했는데.
다음날 물어보니 통장에서 돈이 좀 빠져나갔나 보다. 나중에 알고보니, 같은 생활관 동기 한명이 휴가나갈때 훔쳐가서 써버린것이였다.
복귀후에는 모른척하고, 결국 찾고 찾아서 범인이거 밝혀지니 다른 선까지 소리들어가면 자기에게 불이익있을걸 아니 봐달라고.
나는 그냥 까발리라고 봐주지 말아야된다고. 록형은 알아서 한다고 하고는, 전역하고도 지금까지 결국 돈 못받고 있는 형이 생각이 났다.
그 새끼는 전역할때까지 짬먹었다고 유세떨다 전역하고. 후..
접때 내려가서 만났을때 그때 일을 예기했는데, 말로는 그때 말해버릴꺼라고 말하는 록형이지만 아마 그 형은 그래도 말을 안했을것이다.&lt;&#x2F;p&gt;
&lt;p&gt;어느 날이였다. 그날도 자료 찾느라고 인터넷 검색하고 있었는데, 갑자기 군데 후임한테서 연락이 왔다.
반갑기도 하고 뭔일인가 해서 전화를 받았다. 들어보니 뭐가 좀 이상한게,
자기 서울에 놀러 왔는데 놀다보니 돈을 다 썻다. 집에 돌아가려는데 돈 좀 빌려달라고 웃으면서 말하는 것이였다.
그러냐고, 근데 지금 돈이 없다고 해서 끊었다. 물론 그 몇푼하는 차비 가지고 있었고 그냥 줘도 됐었다.
하지만 &lt;code&gt;아 다르고 어 다르다고&lt;&#x2F;code&gt; 전화를 끊고도 상당히 기분이 나빴다.&lt;&#x2F;p&gt;
&lt;p&gt;작년 어느 날. 회사에 사람안된 매니저를 만나 맨날 야근하고 고생만 하고 있던 개발자 인턴이 있었다.
보통 명절되면, 회사에서 떡값을 주지않는가. 얼쑤구나 좋다해서 떡값받으러가는데, 크로스되어서 나오는 애의 표정이 않좋다.
총무팀에 물어보니 인턴은 짤 없다고. 아나. 퇴근길에 부모님 갖다 드리라고 던지다싶이 걔한테 주고, 얼마 지나지 않아서 일이 또 터졌다.
인턴을 야근까지 시켜가면서 부려먹고는, 그에 해당하는 수당조차 처리를 안해줬었다.
일단 관리자PD가 병신이였던건 둘째 치더라도, 내가 뒤집기 전까지는 총무팀에서 그 사실 조차 인지하지도 못했다는 사실이 상당히 기분이 나빴다.
총무쪽에서는 누락된 보고서는 처리안해줘서, 그거가지고 내가 또 말할려고 하니까 총무팀에 미안하다고 그러지 말아달라고 하던 애가 있었다.&lt;&#x2F;p&gt;
&lt;p&gt;어제였다. 퇴근 후, 집에 돌아와보니 엄마가 엄마친구와 통화중이셨다.
언제는 또 큰아들 큰아들하다가, 오늘 아들내미가 집에 들어왔는데, 신경도 안쓰길레 장난기가 발동하여, 깐죽거렸다.
근데 들려오는 통화내용에 살작 묘한 기운이 풍겨온다. 뭐 돈관련된 예기가 오가고 있었다.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;괜찮다고 괜찮다고, 오히려 연락해줘서 고맙다고. 그럴 수도 있지&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;p&gt;통화를 마친 엄마에게 물어보니, 친구분 아들넘이 여기저기 사고치고 다녀서 그거 물어준다고 하면서 우리 엄마에게 도움을 청한것이였다.
사실 액수는 그리 크지 않은 액수였는데, 액수와는 별개로 그렇게 통화하는 어머니께서 멋있게 보였다.
그렇게 어머니께서는 자연스럽게 내게 계좌번호를 불러주셨고, 나는 이체를 하고 있었다.&lt;&#x2F;p&gt;
&lt;p&gt;그리하여 어쨋든 결국 내 통장에서 돈이 빠져나갔다.&lt;&#x2F;p&gt;
&lt;p&gt;뭐 &lt;code&gt;그럴 수도 있지.&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a data-flickr-embed=&quot;true&quot;  href=&quot;https:&#x2F;&#x2F;www.flickr.com&#x2F;photos&#x2F;netpyoung&#x2F;22802465680&#x2F;&quot; title=&quot;돈이란 뭘까?&quot;&gt;&lt;img src=&quot;https:&#x2F;&#x2F;farm1.staticflickr.com&#x2F;582&#x2F;22802465680_9dc5c7e28e_z.jpg&quot; width=&quot;640&quot; height=&quot;479&quot; alt=&quot;돈이란 뭘까?&quot;&gt;&lt;&#x2F;a&gt;&lt;script async src=&quot;&#x2F;&#x2F;embedr.flickr.com&#x2F;assets&#x2F;client-code.js&quot; charset=&quot;utf-8&quot;&gt;&lt;&#x2F;script&gt;&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>윈도우즈 도커를 이용하여 깃허브 페이지 테스트하기</title>
        <published>2015-10-11T00:00:00+00:00</published>
        <updated>2015-10-11T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://netpyoung.github.io/blog/githubpages_on_windows_docker/" type="text/html"/>
        <id>https://netpyoung.github.io/blog/githubpages_on_windows_docker/</id>
        
        <content type="html">&lt;h1 id=&quot;github-pages-on-windows-docker&quot;&gt;Github Pages on Windows Docker&lt;&#x2F;h1&gt;
&lt;p&gt;&amp;amp; MacBook이 있기에, Windows에서 삽질을 하지 않아도 되지만... Docker에 익숙해지고, Windows에서의 Docker활용하면서 삽질을 미리 경험해보고자... 삽을 푸기로 했다. 사실 이 문서를 보게될 사람 역시 (아마도) 삽질매니아 인가보다.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;http:&#x2F;&#x2F;www.newsm.com&#x2F;news&#x2F;photo&#x2F;200812&#x2F;1106_2264_4956.jpg&quot; alt=&quot;&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;github-pagesran&quot;&gt;Github Pages란?&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;github 저장소를 이용하여, github.io 도메인으로 정적웹사이트 서비스를 제공한다.&lt;&#x2F;li&gt;
&lt;li&gt;스테틱 파일인, html 자체를 이용할 수 있을 뿐만 아니라, github에서 제공해주는 Jekyll 정적 블로그엔진을 이용할 수 있다.&lt;&#x2F;li&gt;
&lt;li&gt;ref:
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;ilmol.com&#x2F;2015&#x2F;01&#x2F;Jekyll,Git%20%EC%9D%84%20%EB%AA%B0%EB%9D%BC%EB%8F%84%20%EB%AC%B4%EB%A3%8C%20Github%20Pages%20%EC%A6%90%EA%B8%B0%EA%B8%B0.html&quot;&gt;Jekyll, Git 을 몰라도 무료 Github Pages 즐기기&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;dogfeet.github.io&#x2F;articles&#x2F;2012&#x2F;github-pages.html&quot;&gt;GitHub의 페이지 기능 이용하기&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;https:&#x2F;&#x2F;pages.github.com&#x2F;versions&#x2F;&lt;&#x2F;li&gt;
&lt;li&gt;https:&#x2F;&#x2F;help.github.com&#x2F;articles&#x2F;using-jekyll-with-pages&#x2F;#installing-jekyll&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;jekylliran&quot;&gt;Jekyll이란?&lt;&#x2F;h2&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;jekyllrb.com&#x2F;img&#x2F;logo-2x.png&quot; alt=&quot;&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;jekyllrb.com&#x2F;&quot;&gt;http:&#x2F;&#x2F;jekyllrb.com&#x2F;&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;정적 웹 블로그 프레임워크로, Ruby로 짜여졌다.&lt;&#x2F;li&gt;
&lt;li&gt;Markdown, Liquid, HTML &amp;amp; CSS을 template제공하여, 렌더링할 수 있게 도와주며 프레임워크인 만큼 여러 편의 기능들이 내장되어 있다.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;munjeneun&quot;&gt;문제는?&lt;&#x2F;h2&gt;
&lt;p&gt;일단 Jekyll을 Windows에서 그냥 실행시키려고 하면, (아마도)gem관련 오류 및 한글 encoding관련 문제에 봉착할 것이다.
비단, Ruby든 Python이든 Windows에서 라이브러리 호환성 및 한글 인코딩 문제는 빠질 수 없다(삽질 필요).
&lt;a href=&quot;http:&#x2F;&#x2F;jekyllrb-ko.github.io&#x2F;docs&#x2F;windows&#x2F;&quot;&gt;Windows 에서 Jekyll&lt;&#x2F;a&gt;에서 소개한 http:&#x2F;&#x2F;jekyll-windows.juthilo.com&#x2F; 사이트 역시 (아마도) 어느정도만 해결하고 걸렸던게 있던걸로 기억한다.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;haegyeolcaegeun&quot;&gt;해결책은?&lt;&#x2F;h2&gt;
&lt;p&gt;(Docker를 활용하여) Windows에 Linux환경을 만들면 된다.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;dockerran&quot;&gt;Docker란?&lt;&#x2F;h2&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;www.docker.com&#x2F;sites&#x2F;all&#x2F;themes&#x2F;docker&#x2F;assets&#x2F;images&#x2F;logo.png&quot; alt=&quot;&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;An open platform for distributed applications for developers and sysadmins&lt;&#x2F;li&gt;
&lt;li&gt;ref:
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;pyrasis.com&#x2F;private&#x2F;2014&#x2F;11&#x2F;30&#x2F;publish-docker-for-the-really-impatient-book&quot;&gt;가장 빨리 만나는 도커(Docker) 출간 및 원고 공개&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;blog.nacyot.com&#x2F;articles&#x2F;2014-01-27-easy-deploy-with-docker&#x2F;&quot;&gt;도커(Docker) 튜토리얼 : 깐 김에 배포까지&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;windowse-docker-seolci&quot;&gt;Windows에 Docker 설치&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;docs.docker.com&#x2F;installation&#x2F;windows&#x2F;&quot;&gt;https:&#x2F;&#x2F;docs.docker.com&#x2F;installation&#x2F;windows&#x2F;&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;ol&gt;
&lt;li&gt;가상화 확인&lt;&#x2F;li&gt;
&lt;li&gt;Docker Toolbox 설치&lt;&#x2F;li&gt;
&lt;li&gt;Docker Toolbox 실행.&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;## open port
&lt;&#x2F;span&gt;&lt;span&gt;docker@default:~$ echo &amp;#39;export DOCKER_HOST=tcp:&#x2F;&#x2F;$(boot2docker ip 2&amp;gt;&#x2F;dev&#x2F;null):8000&amp;#39; &amp;gt;&amp;gt; ~&#x2F;.bash_profile
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;## install image
&lt;&#x2F;span&gt;&lt;span&gt;docker@default:~$ docker search ubuntu
&lt;&#x2F;span&gt;&lt;span&gt;docker@default:~$ docker pull ubuntu:latest
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;## run image
&lt;&#x2F;span&gt;&lt;span&gt;docker@default:~$ docker run -it --name jekyll ubuntu
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;##########################################################################
&lt;&#x2F;span&gt;&lt;span&gt;# install needed package
&lt;&#x2F;span&gt;&lt;span&gt;root@33b5f808449d:&#x2F;# apt-get update
&lt;&#x2F;span&gt;&lt;span&gt;root@33b5f808449d:&#x2F;# apt-get install -y git
&lt;&#x2F;span&gt;&lt;span&gt;root@33b5f808449d:&#x2F;# apt-get install -y curl
&lt;&#x2F;span&gt;&lt;span&gt;root@33b5f808449d:&#x2F;# apt-get install -y node
&lt;&#x2F;span&gt;&lt;span&gt;root@33b5f808449d:&#x2F;# apt-get install -y python-pygments
&lt;&#x2F;span&gt;&lt;span&gt;root@33b5f808449d:&#x2F;# apt-get clean
&lt;&#x2F;span&gt;&lt;span&gt;root@33b5f808449d:&#x2F;# rm -rf &#x2F;var&#x2F;lib&#x2F;apt&#x2F;lists&#x2F;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;## install rvm
&lt;&#x2F;span&gt;&lt;span&gt;root@33b5f808449d:&#x2F;# gpg --keyserver hkp:&#x2F;&#x2F;keys.gnupg.net --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3
&lt;&#x2F;span&gt;&lt;span&gt;root@33b5f808449d:&#x2F;# \curl -sSL https:&#x2F;&#x2F;get.rvm.io | bash -s stable
&lt;&#x2F;span&gt;&lt;span&gt;root@33b5f808449d:&#x2F;# source &#x2F;etc&#x2F;profile.d&#x2F;rvm.sh
&lt;&#x2F;span&gt;&lt;span&gt;root@33b5f808449d:&#x2F;# rvm list known
&lt;&#x2F;span&gt;&lt;span&gt;root@33b5f808449d:&#x2F;# rvm install 2.2
&lt;&#x2F;span&gt;&lt;span&gt;root@33b5f808449d:&#x2F;# rvm use 2.2
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;## install github-pages
&lt;&#x2F;span&gt;&lt;span&gt;root@33b5f808449d:&#x2F;# gem install github-pages
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;root@33b5f808449d:&#x2F;# exit
&lt;&#x2F;span&gt;&lt;span&gt;##########################################################################
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;docker@default:~$ docker ps
&lt;&#x2F;span&gt;&lt;span&gt;CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS                    NAMES
&lt;&#x2F;span&gt;&lt;span&gt;33b5f808449d        ubuntu              &amp;quot;&#x2F;bin&#x2F;bash&amp;quot;         About an hour ago   Up About an hour    0.0.0.0:8000-&amp;gt;8000&#x2F;tcp   jekyll
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;## backup image
&lt;&#x2F;span&gt;&lt;span&gt;docker@default:~$ docker commit 33b5f808449d github-pages
&lt;&#x2F;span&gt;&lt;span&gt;docker@default:~$ docker images
&lt;&#x2F;span&gt;&lt;span&gt;REPOSITORY          TAG                 IMAGE ID            CREATED             VIRTUAL SIZE
&lt;&#x2F;span&gt;&lt;span&gt;github-pages        latest              3ccaea30ec80        About an hour ago   641.5 MB
&lt;&#x2F;span&gt;&lt;span&gt;ubuntu              latest              cdd474520b8c        45 hours ago        188 MB
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;## set volum from VirtualBox
&lt;&#x2F;span&gt;&lt;span&gt;docker@default:~$ docker run -it --name jekyll -p 8000:8000 -v &#x2F;c&#x2F;Users&#x2F;pyoung&#x2F;hello&#x2F;netpyoung.github.io&#x2F;:&#x2F;site github-pages
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;##########################################################################
&lt;&#x2F;span&gt;&lt;span&gt;root# cd &#x2F;site
&lt;&#x2F;span&gt;&lt;span&gt;root# jekyll serve --port 8000 --watch --force_polling
&lt;&#x2F;span&gt;&lt;span&gt;##########################################################################
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h2 id=&quot;jujeori&quot;&gt;주저리.&lt;&#x2F;h2&gt;
&lt;p&gt;사실 이 글을 작성하기 시작한건 꽤 되었는데, 그동안 Boot2Docker가 공식 메뉴얼에서 deprecate되었다.. 대충 기능은 비슷하고 docker-container로 변경된점?
게임회사에서 기능별로 브랜치까고, 서버 테스트를 할때 공유서버가 아닌, 기능 담당자별 서버가 필요한데. 배포나 설치하는걸 docker로 하면 그냥 간단하게 될것같다.
쩝 지금있는데는 뭐 한쪽은 svn쓰고, 한쪽은 git을 svn처럼 활용하고 있는데 뭐 더 할말이 있겠냐만은..
음.. 이제 좀 포스트하는데 편해졌다.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;cuga&quot;&gt;추가.&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;docker github-pages로 쉽게 테스트 해볼 수 있게 되었다. &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Starefossen&#x2F;docker-github-pages&quot;&gt;https:&#x2F;&#x2F;github.com&#x2F;Starefossen&#x2F;docker-github-pages&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>netpyoung.github.io 탄생</title>
        <published>2015-10-11T00:00:00+00:00</published>
        <updated>2015-10-11T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://netpyoung.github.io/blog/netpyoung.github.io_on_jekyll/" type="text/html"/>
        <id>https://netpyoung.github.io/blog/netpyoung.github.io_on_jekyll/</id>
        
        <content type="html">&lt;p&gt;개인적으로 생각하기에, 개발자가 자신의 블로그를 갖고 자신의 경험(삽질)을 공유해주는걸 멋있다고 생각하기에 블로그를 시작하게 되었다.&lt;&#x2F;p&gt;
&lt;p&gt;그전까지는, &lt;a href=&quot;http:&#x2F;&#x2F;netpyoung.springnote.com&quot;&gt;http:&#x2F;&#x2F;netpyoung.springnote.com&lt;&#x2F;a&gt; 를 이용해 단순 정리노트 , &lt;a href=&quot;http:&#x2F;&#x2F;netpyoung.tistory.com&quot;&gt;http:&#x2F;&#x2F;netpyoung.tistory.com&lt;&#x2F;a&gt; 를 이용 내용 정리를 하였는데,
springnote의 운영중단 및 tistory의 한계를 느끼는 터에 여기에 자리잡게되었다.&lt;&#x2F;p&gt;
&lt;p&gt;개발일을 하다보면, 구글이 친구이며, stackoverflow와 reddit이나 facebook그룹이나 각종 포럼에서 글을 섭렵하기 마련이다.
뭔가 끌리는 아이디어, 정리할 내용이 있으면 notepad++을 꺼내들고 살며시 저장 백업을 한다. evernote가 이러한 역활에는 맞아떨어지지만 웬지 모르게 거부감이 들어 아직까지도 evernote는 잘 안쓰고 있다.
markdown으로 블로그를 작성할 수 있는 서비스를 찾았고, &lt;a href=&quot;https:&#x2F;&#x2F;www.tumblr.com&#x2F;&quot;&gt;https:&#x2F;&#x2F;www.tumblr.com&#x2F;&lt;&#x2F;a&gt; 가 대안으로 떠올랐지만,
&lt;a href=&quot;http:&#x2F;&#x2F;dogfeet.github.io&#x2F;&quot;&gt;http:&#x2F;&#x2F;dogfeet.github.io&#x2F;&lt;&#x2F;a&gt; 와 &lt;a href=&quot;http:&#x2F;&#x2F;spoqa.github.io&#x2F;&quot;&gt;http:&#x2F;&#x2F;spoqa.github.io&#x2F;&lt;&#x2F;a&gt; 를 보면서, github pages를 알게되었고, 그것이 제공해주는 기능에 더 끌렸다.&lt;&#x2F;p&gt;
&lt;p&gt;Github Pages는 github.io에 정적 호스팅을 할 수 있는 서비스이며, 기반 엔진으로 jekyll을 이용한다.
완전히 옮겨가기 전에 한번 jekyll bootstrap으로 시도해봤다가 이도 저도 않되었으나,
jekyll 처음부터 구축 다행이도 이때쯤에는 싸이트 문서화가 어느정도 되어있어서 비교적 쉽게 옮길 수 있었다.&lt;&#x2F;p&gt;
&lt;p&gt;다만, ruby에는 익숙했지만 jekyll에는 익숙치 않아서 문서를 뒤져가며 삽질.
디자인에 영 꽝이여서 bootstrap을 이용하기로 결정하였고, 아이콘은 font awsome이용하기로 하였다.
web front-end 개발자가 아니여서 살작 애를 먹긴 했으나 뭐 이정도 쯤이야.
마크다운 엔진은 github가 쓰는 redcarpet을 사용하기로 결정.&lt;&#x2F;p&gt;
&lt;p&gt;옮긴 이후에, clojure로 작성된 &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;cryogen-project&#x2F;cryogen&quot;&gt;https:&#x2F;&#x2F;github.com&#x2F;cryogen-project&#x2F;cryogen&lt;&#x2F;a&gt; 역시 심각히 고려해봤지만,
github내의 편집 용의성, jekyll이 보다 빠른 실행시간을 보여줘서 jekyll로 정착하기로 했다.&lt;&#x2F;p&gt;
&lt;p&gt;음 되돌아보니, 2013.07.03부터 옮겼구나. jekyll bootstrap없이 생짜로 올리기 시작하면서 삽질한 내용, 참고 링크를 첨부하면서 이 포스팅을 계속 업데이트해 나가겠다.&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;h2 id=&quot;jekyll&quot;&gt;jekyll&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;홈페이지:  &lt;a href=&quot;http:&#x2F;&#x2F;jekyllrb.com&#x2F;&quot;&gt;http:&#x2F;&#x2F;jekyllrb.com&#x2F;&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;일반 텍스트 문서를 정적 웹사이트나 블로그로 변환시켜줌.&lt;&#x2F;li&gt;
&lt;li&gt;UTF8 no BOM으로 문서를 작성해야 한다.&lt;&#x2F;li&gt;
&lt;li&gt;참고:
&lt;ul&gt;
&lt;li&gt;jekyll wiki: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mojombo&#x2F;jekyll&#x2F;wiki&quot;&gt;https:&#x2F;&#x2F;github.com&#x2F;mojombo&#x2F;jekyll&#x2F;wiki&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;jekyll tutorial: &lt;a href=&quot;http:&#x2F;&#x2F;www.andrewmunsell.com&#x2F;blog&#x2F;ultimate-jekyll-tutorial&#x2F;&quot;&gt;http:&#x2F;&#x2F;www.andrewmunsell.com&#x2F;blog&#x2F;ultimate-jekyll-tutorial&#x2F;&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;jekyll-bootstrap&quot;&gt;jekyll bootstrap&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;홈페이지: &lt;a href=&quot;http:&#x2F;&#x2F;jekyllbootstrap.com&#x2F;&quot;&gt;http:&#x2F;&#x2F;jekyllbootstrap.com&#x2F;&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;JB api: &lt;a href=&quot;http:&#x2F;&#x2F;jekyllbootstrap.com&#x2F;api&#x2F;bootstrap-api.html&quot;&gt;http:&#x2F;&#x2F;jekyllbootstrap.com&#x2F;api&#x2F;bootstrap-api.html&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;jekyll을 보다 쉽게 사용할 수 있도록, 트위터 부트스트랩, JB 플러그인등 설정이 되어있음.&lt;&#x2F;li&gt;
&lt;li&gt;처음엔 간편하고 좋아보이나, 처음부터 이걸로 접근하는건 비추천..&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;docker&quot;&gt;Docker&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;Windows에서 기어이 돌릴려고 라이브러리 어거지로 돌아가도록 수정하다, 다 내려놓고 docker이용.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;&#x2F;blog&#x2F;githubpages_on_windows_docker&quot;&gt;윈도우즈 도커를 이용하여 깃허브 페이지 테스트하기&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;docker@default:~$&lt;&#x2F;span&gt;&lt;span&gt; docker start jekyll
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;jekyll
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;docker@default:~$&lt;&#x2F;span&gt;&lt;span&gt; docker attach jekyll
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;root@33b5f808449d:&#x2F;#
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;root@33b5f808449d:&#x2F;#&lt;&#x2F;span&gt;&lt;span&gt; cd &#x2F;site&#x2F;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;root@33b5f808449d:&#x2F;site#&lt;&#x2F;span&gt;&lt;span&gt; source &#x2F;etc&#x2F;profile.d&#x2F;rvm.sh
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;root@33b5f808449d:&#x2F;site#&lt;&#x2F;span&gt;&lt;span&gt; rvm use 2.2
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Using&lt;&#x2F;span&gt;&lt;span&gt; &#x2F;usr&#x2F;local&#x2F;rvm&#x2F;gems&#x2F;ruby-2.2.1
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;root@33b5f808449d:&#x2F;site#&lt;&#x2F;span&gt;&lt;span&gt; jekyll serve&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; --port&lt;&#x2F;span&gt;&lt;span&gt; 8000&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; --watch --force_polling
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h2 id=&quot;code-highlight&quot;&gt;code highlight&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;richleland&#x2F;pygments-css&quot;&gt;https:&#x2F;&#x2F;github.com&#x2F;richleland&#x2F;pygments-css&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;richleland.github.io&#x2F;pygments-css&#x2F;&quot;&gt;http:&#x2F;&#x2F;richleland.github.io&#x2F;pygments-css&#x2F;&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;chriskempson&#x2F;tomorrow-theme&quot;&gt;https:&#x2F;&#x2F;github.com&#x2F;chriskempson&#x2F;tomorrow-theme&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;ref:
&lt;ul&gt;
&lt;li&gt;tomorrow-pygments: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;MozMorris&#x2F;tomorrow-pygments&quot;&gt;https:&#x2F;&#x2F;github.com&#x2F;MozMorris&#x2F;tomorrow-pygments&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;tags&quot;&gt;Tags&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;www.minddust.com&#x2F;post&#x2F;tags-and-categories-on-github-pages&#x2F;&quot;&gt;http:&#x2F;&#x2F;www.minddust.com&#x2F;post&#x2F;tags-and-categories-on-github-pages&#x2F;&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;jekyllrb.com&#x2F;docs&#x2F;permalinks&#x2F;&quot;&gt;http:&#x2F;&#x2F;jekyllrb.com&#x2F;docs&#x2F;permalinks&#x2F;&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;liquid&quot;&gt;Liquid&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;jekyll 지원을 안해줘서 그렇지 개인적으로는 Mustache템플릿 엔진을 더 선호한다.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;jekyllrb.com&#x2F;docs&#x2F;variables&#x2F;&quot;&gt;http:&#x2F;&#x2F;jekyllrb.com&#x2F;docs&#x2F;variables&#x2F;&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Shopify&#x2F;liquid&#x2F;wiki&#x2F;Liquid-for-Designers&quot;&gt;https:&#x2F;&#x2F;github.com&#x2F;Shopify&#x2F;liquid&#x2F;wiki&#x2F;Liquid-for-Designers&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;markdown&quot;&gt;markdown&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;vmg&#x2F;redcarpet&quot;&gt;https:&#x2F;&#x2F;github.com&#x2F;vmg&#x2F;redcarpet&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;components&quot;&gt;Components&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;bootstrap&quot;&gt;bootstrap&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;twitter.github.io&#x2F;bootstrap&#x2F;&quot;&gt;http:&#x2F;&#x2F;twitter.github.io&#x2F;bootstrap&#x2F;&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;동영상강의: &lt;a href=&quot;http:&#x2F;&#x2F;www.youtube.com&#x2F;user&#x2F;easydevtuts&#x2F;videos?shelf_index=1&amp;amp;tag_id=&amp;amp;sort=p&amp;amp;view=0&quot;&gt;http:&#x2F;&#x2F;www.youtube.com&#x2F;user&#x2F;easydevtuts&#x2F;videos?shelf_index=1&amp;amp;tag_id=&amp;amp;sort=p&amp;amp;view=0&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;ref:&lt;&#x2F;li&gt;
&lt;li&gt;bootswatch: &lt;a href=&quot;http:&#x2F;&#x2F;bootswatch.com&#x2F;&quot;&gt;http:&#x2F;&#x2F;bootswatch.com&#x2F;&lt;&#x2F;a&gt;
&lt;ul&gt;
&lt;li&gt;slate&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;font-awesome&quot;&gt;Font Awesome&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;fortawesome.github.io&#x2F;Font-Awesome&#x2F;&quot;&gt;http:&#x2F;&#x2F;fortawesome.github.io&#x2F;Font-Awesome&#x2F;&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;music&quot;&gt;Music&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;SCM Music Player: &lt;a href=&quot;http:&#x2F;&#x2F;scmplayer.net&#x2F;&quot;&gt;http:&#x2F;&#x2F;scmplayer.net&#x2F;&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;colorzilla&quot;&gt;ColorZilla&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;색상 추출하는 firefox 플러그인.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;addons.mozilla.org&#x2F;en-us&#x2F;firefox&#x2F;addon&#x2F;colorzilla&#x2F;&quot;&gt;https:&#x2F;&#x2F;addons.mozilla.org&#x2F;en-us&#x2F;firefox&#x2F;addon&#x2F;colorzilla&#x2F;&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>페넘브라의 24시 서점</title>
        <published>2015-09-04T00:00:00+00:00</published>
        <updated>2015-09-04T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://netpyoung.github.io/blog/mr_penumbra_24-hour_bookstore/" type="text/html"/>
        <id>https://netpyoung.github.io/blog/mr_penumbra_24-hour_bookstore/</id>
        
        <content type="html">&lt;p&gt;Mr. Penumbra&#x27;s 24-Hour Bookstore&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;페넘브라 14시 서점에서 이상한 일들이 벌어지고 있다&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;p&gt;it개발자가 읽으면 피식하게 웃게될만한.. 책.&lt;&#x2F;p&gt;
&lt;p&gt;it실업자 주인공이, 서점에 취직하면서 일어나게 되는 사건들.&lt;&#x2F;p&gt;
&lt;p&gt;누가 무얼 숨겼고, 주인공은 또 어떻게 밝혀나가는가..&lt;&#x2F;p&gt;
&lt;p&gt;페넘브라 서점이 그 입구가 되어 펼쳐지는 현대의 판타지를 보는듯한 그러한 소설이였다.&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;페넘브라: &#x27;페넘브라의 24시 서점&#x27;의 관리자.&lt;&#x2F;li&gt;
&lt;li&gt;클레이: 주인공. 디자이너이자, 웹디자이너. 베이글 만드는 소프트웨어 회사에서 퇴직금도 받지못하고 퇴사후, 실업자. &#x27;24시 서점&#x27; 헌책방의 야간 직원으로 일하게 된다.&lt;&#x2F;li&gt;
&lt;li&gt;닐 샤: 클레이의 가장 친한 친구. 나와 같이 &lt;code&gt;용의 노래 연대기&lt;&#x2F;code&gt;의 광팬&lt;&#x2F;li&gt;
&lt;li&gt;캣: 구글에서 일하는 여자. 주인공을 도와 페넘브라 서점에 숨겨진 비밀을 밝혀낸다.&lt;&#x2F;li&gt;
&lt;li&gt;알두스 마누티우스(테오발도): 베네치아에서 가장 큰 인쇄소를 운영
&lt;ul&gt;
&lt;li&gt;마누티우스의 코덱스 비테: 책. 평생 경험하고 배운것을, 후손을 위해 써두기로함. 사업에 타격을 입을까, 책을 암호화함.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;그리포 게리츠존 : 마누티우스와의 절실한 친구. 마누티우스에게 마지막 메시지를 남겼다.&lt;&#x2F;li&gt;
&lt;li&gt;&#x27;부러지지 않은 책등&#x27;: 코덱스 비테를 풀기위한 비밀 조직.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;code&gt;만일 오랫동안 보존해야 할 메시지가 있다면 여러분은 어떻게 하시겠습니까?&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;p&gt;머리가 아무리 좋아도, 돈이 많아도, 지식이 많더라도. 놓치고 포기하며 넘어가는 것일지라도, 간절하면 마법과도 이루어지는건 소설이든 현실이든 상관없이 멋있는 일이지 않은가?&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;풀어야 할 수수께끼들도 많이 남았고. 어떤가, 나와 함께하겠는가?&lt;&#x2F;code&gt; - 페넘브라.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>헤럴드 프라이의 놀라운 순례</title>
        <published>2015-03-21T00:00:00+00:00</published>
        <updated>2015-03-21T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://netpyoung.github.io/blog/the_unlikely_pilgrimage_of_harold_fry/" type="text/html"/>
        <id>https://netpyoung.github.io/blog/the_unlikely_pilgrimage_of_harold_fry/</id>
        
        <content type="html">&lt;p&gt;The Unlikely Pilgrimage of Harold Fry&lt;&#x2F;p&gt;
&lt;p&gt;&quot;모든 것을 바꾸어 놓게 될 편지는 화요일에 도착했다.&quot;&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;헤럴드 : 주인공으로써, 퀴니 헤네시에게서 온 편지 한장으로 여정을 떠나게된다.&lt;&#x2F;li&gt;
&lt;li&gt;모린 : 헤럴드의 아내&lt;&#x2F;li&gt;
&lt;li&gt;퀴니 헤네시: 오래전에 헤럴드와 같이 일했던 여자. 암으로 죽어가고 있다.&lt;&#x2F;li&gt;
&lt;li&gt;데이비드: 헤럴드와 모린사이의 아들.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;불안해 하는 모린, 헤럴드와 모린 사이의 벽, 삶을 돌아보는것 자체의 소중함.&lt;&#x2F;p&gt;
&lt;p&gt;어쩌면 이해가 가지 않는다. 암에 걸려 죽을 사람에게 편지를 그것도 걸어서 간다니. 가능한 빨리 가야하지 않는가.&lt;&#x2F;p&gt;
&lt;p&gt;이 책에서는 그런 것은 중요치 않는다. 중요한것은, 걸어가는 동안의 헤럴드와 도중에 만난 사람들, 퀴니의 이야기를 풀어내는 것이다.&lt;&#x2F;p&gt;
&lt;p&gt;궁금하지 않은가. 헤럴드가 왜 그 머나먼 길을 걸어서 가려 했는지.&lt;&#x2F;p&gt;
&lt;p&gt;퀴니와는 어떤관계이길레 그 길을 떠나는지.&lt;&#x2F;p&gt;
&lt;p&gt;아내 퀴니와는 어떠한 일이 있었는지.&lt;&#x2F;p&gt;
&lt;p&gt;도중에 만나는 사건들이 어떤 영향을 주는지.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;헤럴드가 아주 작은 소리로 말했기 때문에 말이 공기의 한 부분 처럼 느껴졌다. &quot;용서가 필요한 사람은 나지.&quot;&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;p&gt;시간이 없었다. 아니 여유가 없었다고 해야 될려나. 전역 후 작년까지는 이런 저런 일이 있으면서, 그 좋아하던 소설책을 읽은 기억이 없다.
작년에서 올해로 해돋이를 보러 가는 것이, 홀로 첫 여행. 그때의 모습이 소설 속 헤럴드의 모습과 겹치는 느낌이 들었다.
사실 그때 해돋이를 보러 갈 예정이 없었다. 잊으려해도 잊어지지 않는 모습을 가지고, 되돌아보는.... 그런 뭐 그런것 하..&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;&quot;당신은 일어섰고, 뭔가를 해냈어. 갈 수 있을지 어떨지도 잘 모르면서 길을 찾으려고 노력하는 것이 작은 기적이 아니라면 뭐가 기적이겠어.&quot;&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&quot;Have you seen Harold Fry?&quot;&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>스물 아홉 마지막 날.</title>
        <published>2014-12-31T00:00:00+00:00</published>
        <updated>2014-12-31T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://netpyoung.github.io/blog/goodbye_twenties/" type="text/html"/>
        <id>https://netpyoung.github.io/blog/goodbye_twenties/</id>
        
        <content type="html">&lt;h2 id=&quot;annyeong-naege-isseo-geu-eoddeohan-geosbodado-sojunghago-canranhaessdeon-20daeyeo&quot;&gt;안녕, 내게 있어 그 어떠한 것보다도 소중하고 찬란했던 20대여.&lt;&#x2F;h2&gt;
&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;&#x2F;&#x2F;www.youtube.com&#x2F;embed&#x2F;NLhq1Zq4UZg&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;&#x2F;iframe&gt;
&lt;p&gt;그져 그런 사람은 되기 싫었다.&lt;&#x2F;p&gt;
&lt;p&gt;다들 서른되어도 똑같다고 말해도, 내게 있어서는 진짜 특별한 의미를 지닌다. 지난 몇년간 이 날을 얼마나 기다리고 준비했던가. 서른을 기점으로, 그동안 쏟아부은 돈, 열정, 시간에 대해 나름 평가해보고 싶었다.&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;그 값싼 제주대를 도중에 나올 수 밖에 없었던 그때의 상황.&lt;&#x2F;li&gt;
&lt;li&gt;안되는 영어 좀 해볼려고, 초소에 들고다니며 외웠던 단어장.&lt;&#x2F;li&gt;
&lt;li&gt;등록금 빚을 값기 위해, 전역하자마자 시작한 감귤상자 까대기.&lt;&#x2F;li&gt;
&lt;li&gt;다시 늦게 시작한 만큼, 쌓여버린 각종 책들과 지세운 밤들.&lt;&#x2F;li&gt;
&lt;li&gt;개발자가 내 길이 아닌가 진지하게 고민해 봤던 첫번째 회사.&lt;&#x2F;li&gt;
&lt;li&gt;어설프게 편입을 준비하다, 축낸 시간과 돈.&lt;&#x2F;li&gt;
&lt;li&gt;진지하고 치열하게 개발했던, 많은 상처를 받았던 데빌메이커.&lt;&#x2F;li&gt;
&lt;li&gt;삶에 치여서인지, 너무 나도 늦게 찾아온 애잔한 감정.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;지금 생각해도 가슴이 아리는 굵직한것들만 나열해봤는데, 이 외에도 사건 사고들이 많았다. 온, 오프라인 상에 만났던 사람들과의 에피소드들은 아직도 눈을 감으면 생생히 떠오르는 추억들이다. 아... 진짜 20대 기억이 더듬어 보니 울컥하네. 눈물도 많이 흘리고, 화도 많이 내고, 밤도 많이 지세우면서, 넘어지고 일어서기를 반복했던것 같다.&lt;&#x2F;p&gt;
&lt;p&gt;특히, 올해(2014년)가 재미있었던게, 연초부터, 인연들이 서로 엇돌고 맞아들어가는게 눈에 보이는데 너무 힘들고, 재미있다. - 진짜, 작년 그 &lt;code&gt;헬게이트&lt;&#x2F;code&gt;에서 빠져나온게 신의 한수인듯!&lt;&#x2F;p&gt;
&lt;p&gt;지나온걸 쭉 보니, 어디서부터 시작했는가는 별로 중요하지 않다는걸 다시금 느낀다. 현재 내가 여기에 있고, 앞으로 재미있는게 엄청 많이 남아있다는 것을 알기에...&lt;&#x2F;p&gt;
&lt;p&gt;여기까지 왔다. 자 다시 가보자. 뒤는 충분히 돌아봤다. 챙겨가고 싶은건 많지만, 놔버리자. 더 이상 주저할 수 없다. 비록 엉성하지만 다시 출발한다 하더라도 문제가 없다.&lt;&#x2F;p&gt;
&lt;p&gt;남들이 보기엔 화려하긴커녕, 평범하지도 못해보일지도 모르겠지만. &lt;code&gt;안녕, 내게 있어 그 어떠한 것보다도 소중하고 찬란했던 20대여&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;ps. 이 글을 찾을 수 있으실지는 잘 모르겠습니다. 나이가 많고 적음을 떠나, 부족한 저를 좋게 봐주시고, 조언해주시며, 인정해 주신 분들이 있었기에, 이 자리까지 올 수 있었습니다. &lt;code&gt;진심으로 감사드립니다&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>skype봇 sevabot의 한글명령어 문제 해결</title>
        <published>2014-09-04T00:00:00+00:00</published>
        <updated>2014-09-04T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://netpyoung.github.io/blog/sevabot_hangul/" type="text/html"/>
        <id>https://netpyoung.github.io/blog/sevabot_hangul/</id>
        
        <content type="html">&lt;h2 id=&quot;sevabotiran&quot;&gt;sevabot이란?&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;sevabot-skype-bot.readthedocs.org&#x2F;&quot;&gt;http:&#x2F;&#x2F;sevabot-skype-bot.readthedocs.org&#x2F;&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;Skype4Py 프레임워크를 기반으로한, 스카이프 봇 프로그램.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;munjeneun&quot;&gt;문제는?&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;한글 명령어가 안먹히는 문제가 있음.&lt;&#x2F;li&gt;
&lt;li&gt;파이썬2에선 문자열 다룰때 x신같은게 꼭 인코딩 문제가 있음.&lt;&#x2F;li&gt;
&lt;li&gt;윈도우 경우, &lt;code&gt;utf-8&lt;&#x2F;code&gt;, &lt;code&gt;cp949&lt;&#x2F;code&gt; 관련 인코딩 문제가 있으며.&lt;&#x2F;li&gt;
&lt;li&gt;맥인 경우, &lt;code&gt;utf-8&lt;&#x2F;code&gt;뿐만 아니라, &lt;a href=&quot;http:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Unicode_equivalence&quot;&gt;NFD&lt;&#x2F;a&gt;문제까지 있다.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;haegyeolcaegeun&quot;&gt;해결책은?&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;settings.py&lt;&#x2F;code&gt;의 &lt;code&gt;MOUDLE_PATHS&lt;&#x2F;code&gt;를 유니코드 문자열로 바꿔주고.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;MODULE_PATHS &lt;&#x2F;span&gt;&lt;span&gt;= [&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;u&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;modules&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;]
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;NFD&lt;&#x2F;code&gt;문제 해결을 위한, &lt;a href=&quot;https:&#x2F;&#x2F;raw.github.com&#x2F;sublee&#x2F;hangulize&#x2F;master&#x2F;hangulize&#x2F;hangul.py&quot;&gt;Hye-Shik Chang 님의 hangul.py&lt;&#x2F;a&gt; 을 &lt;code&gt;sevabot&#x2F;hangul.py&lt;&#x2F;code&gt;로 저장.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;sevabot&#x2F;bot&#x2F;module.py&lt;&#x2F;code&gt; 수정.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# 기본 인코딩을 utf-8로 바꿔주고
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;sys
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;reload&lt;&#x2F;span&gt;&lt;span&gt;(sys)
&lt;&#x2F;span&gt;&lt;span&gt;sys.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;setdefaultencoding&lt;&#x2F;span&gt;&lt;span&gt;(&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;utf-8&lt;&#x2F;span&gt;&lt;span&gt;&amp;#39;)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;from &lt;&#x2F;span&gt;&lt;span&gt;sevabot.plugins &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;hangul
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# windows 인코딩을 위한 threaded_run 함수 수정.
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;sys.platform == &amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;win32&lt;&#x2F;span&gt;&lt;span&gt;&amp;#39;:
&lt;&#x2F;span&gt;&lt;span&gt;        env = os.environ.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;copy&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;span&gt;        env[&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;SKYPE_USERNAME&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;encode&lt;&#x2F;span&gt;&lt;span&gt;(&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;utf-8&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;)] = username.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;encode&lt;&#x2F;span&gt;&lt;span&gt;(&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;utf-8&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;        env[&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;SKYPE_FULLNAME&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;encode&lt;&#x2F;span&gt;&lt;span&gt;(&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;utf-8&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;)] = full_name.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;encode&lt;&#x2F;span&gt;&lt;span&gt;(&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;utf-8&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        p_args = [arg.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;encode&lt;&#x2F;span&gt;&lt;span&gt;(&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;cp949&lt;&#x2F;span&gt;&lt;span&gt;&amp;#39;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span&gt;arg &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span&gt;args]
&lt;&#x2F;span&gt;&lt;span&gt;        process = subprocess.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Popen&lt;&#x2F;span&gt;&lt;span&gt;(p_args, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;stdout&lt;&#x2F;span&gt;&lt;span&gt;=subprocess.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;PIPE&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;stderr&lt;&#x2F;span&gt;&lt;span&gt;=subprocess.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;STDOUT&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;shell&lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;True&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;env&lt;&#x2F;span&gt;&lt;span&gt;=env)
&lt;&#x2F;span&gt;&lt;span&gt;        out = process.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;communicate&lt;&#x2F;span&gt;&lt;span&gt;()[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;]
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span&gt;out.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;decode&lt;&#x2F;span&gt;&lt;span&gt;(&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;utf-8&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# osx에 NFD문제 해결을 위한 load_modules 함수 수정
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;sys.platform == &amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;darwin&lt;&#x2F;span&gt;&lt;span&gt;&amp;#39;:
&lt;&#x2F;span&gt;&lt;span&gt;            body = hangul.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;conjoin&lt;&#x2F;span&gt;&lt;span&gt;(body.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;decode&lt;&#x2F;span&gt;&lt;span&gt;(&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;utf-8&lt;&#x2F;span&gt;&lt;span&gt;&amp;#39;))
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h2 id=&quot;namaissneun-munjejeom&quot;&gt;남아있는 문제점.&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;윈도우즈 같은 경우 bat파일을 실행시킬 경우, output이 cp494인데, 기존 utf-8인코딩과 cp494인코딩을 동시에 지원하기에는 에로사항이 있다.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;jageobdoen-peurojegteu&quot;&gt;작업된 프로젝트.&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;netpyoung&#x2F;sevabot&quot;&gt;https:&#x2F;&#x2F;github.com&#x2F;netpyoung&#x2F;sevabot&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;camgo&quot;&gt;참고.&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;blog.naver.com&#x2F;amurorei82&#x2F;10188770513&quot;&gt;OSX에 Skype bot - sevabot 설치하기&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;opensourcehacker&#x2F;sevabot&#x2F;issues&#x2F;58&quot;&gt;sevabot issue &#x2F; With windows many problem... #58&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;drypot&#x2F;writings&#x2F;blob&#x2F;master&#x2F;categories&#x2F;mac&#x2F;mac-os-x-filename-encoding.md&quot;&gt;Mac OS X Filename Encoding&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Timl example (:Ls Command)</title>
        <published>2014-04-07T00:00:00+00:00</published>
        <updated>2014-04-07T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://netpyoung.github.io/blog/timl_example_ls_command/" type="text/html"/>
        <id>https://netpyoung.github.io/blog/timl_example_ls_command/</id>
        
        <content type="html">&lt;h2 id=&quot;timliran&quot;&gt;Timl이란?&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tpope&#x2F;timl&quot;&gt;https:&#x2F;&#x2F;github.com&#x2F;tpope&#x2F;timl&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;lisp 방언(dialect)중 하나로, VimL로 컴파일된다. (Clojure가 VimL을 만났다고 생각하면 된다.)&lt;&#x2F;li&gt;
&lt;li&gt;4월 1일날 공개해서, 만우절 낚시인줄 알았는데 잘돌아간다..&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;Clojure&#x2F;comments&#x2F;21x6hr&#x2F;sbcl_with_support_for_clojure_xpost_from_rlisp&#x2F;&quot;&gt;2014.04.01 sbcl 클로져 지원 낚시&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;feature&quot;&gt;Feature.&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;매크로지원:&lt;code&gt;syntax quoting&lt;&#x2F;code&gt;, &lt;code&gt;&amp;amp;form&lt;&#x2F;code&gt;, &lt;code&gt;&amp;amp;env&lt;&#x2F;code&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;레퍼런스타입 지원: vars, atoms, futures.&lt;&#x2F;li&gt;
&lt;li&gt;내장 함수 사용: &lt;code&gt;(#*toupper &quot;TimL is pretty neat&quot;)&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;li&gt;Vim command 호출: &lt;code&gt;(execute &quot;wq&quot;)&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;li&gt;기타 등등.. (공식페이지 참조.)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;example&quot;&gt;Example.&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;:!ls&lt;&#x2F;code&gt;로 Vim &lt;code&gt;밖&lt;&#x2F;code&gt;에서 파일목록을 볼 수 있지만, Vim 버퍼 &lt;code&gt;안&lt;&#x2F;code&gt;에서 ls 명령결과를 확인할 수 있는 플러그 인을 작성해보자.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;플러그인 구조.&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;    [~&#x2F;.vim]$ tree xxx
&lt;&#x2F;span&gt;&lt;span&gt;    xxx
&lt;&#x2F;span&gt;&lt;span&gt;    ├── autoload
&lt;&#x2F;span&gt;&lt;span&gt;    │   └── xxx
&lt;&#x2F;span&gt;&lt;span&gt;    │       └── core.tim
&lt;&#x2F;span&gt;&lt;span&gt;    └── plugin
&lt;&#x2F;span&gt;&lt;span&gt;        └── xxx.vim
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;vimrc&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;vim&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-vim &quot;&gt;&lt;code class=&quot;language-vim&quot; data-lang=&quot;vim&quot;&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;has&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;&amp;#39;vim_starting&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;set&lt;&#x2F;span&gt;&lt;span&gt; runtimepath+&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;=~&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;&#x2F;.vim&#x2F;&lt;&#x2F;span&gt;&lt;span&gt;xxx&#x2F;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;endif
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;xxx&#x2F;autoload&#x2F;xxx&#x2F;core.tim&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;clojure&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-clojure &quot;&gt;&lt;code class=&quot;language-clojure&quot; data-lang=&quot;clojure&quot;&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;ns&lt;&#x2F;span&gt;&lt;span&gt; xxx.core)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;;; ref: http:&#x2F;&#x2F;clojuredocs.org&#x2F;clojure_core&#x2F;clojure.core&#x2F;-&amp;gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;;; timl에는 `-&amp;gt;`만 들어가 있고, 아직 `-&amp;gt;&amp;gt;`는 들어가 있지 않다.
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;;; 기존 clojure 소스카피
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;defmacro &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;-&amp;gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;  ([x form] (&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;seq?&lt;&#x2F;span&gt;&lt;span&gt; form)
&lt;&#x2F;span&gt;&lt;span&gt;    (&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;with-meta &lt;&#x2F;span&gt;&lt;span&gt;`(~(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;first&lt;&#x2F;span&gt;&lt;span&gt; form) ~@(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;next&lt;&#x2F;span&gt;&lt;span&gt; form)  ~x) (&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;meta&lt;&#x2F;span&gt;&lt;span&gt; form))
&lt;&#x2F;span&gt;&lt;span&gt;    (&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;list&lt;&#x2F;span&gt;&lt;span&gt; form x)))
&lt;&#x2F;span&gt;&lt;span&gt;  ([x form &amp;amp; more]
&lt;&#x2F;span&gt;&lt;span&gt;   `(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;-&amp;gt;&amp;gt; &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;-&amp;gt;&amp;gt; &lt;&#x2F;span&gt;&lt;span&gt;~x ~form) ~@more)))
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;defn &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;ls &lt;&#x2F;span&gt;&lt;span&gt;[&amp;amp; args]
&lt;&#x2F;span&gt;&lt;span&gt;  (&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;-&amp;gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span&gt; args
&lt;&#x2F;span&gt;&lt;span&gt;       (&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;concat &lt;&#x2F;span&gt;&lt;span&gt;[&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;ls&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot; &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;-al&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;])
&lt;&#x2F;span&gt;&lt;span&gt;       (&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;join &lt;&#x2F;span&gt;&lt;span&gt;&amp;quot; &amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;       (#*system)
&lt;&#x2F;span&gt;&lt;span&gt;       (&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;println&lt;&#x2F;span&gt;&lt;span&gt;)))
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;xxx&#x2F;plugin&#x2F;xxx.vim&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;vim&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-vim &quot;&gt;&lt;code class=&quot;language-vim&quot; data-lang=&quot;vim&quot;&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;exists&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;&amp;quot;g:loaded_xxx&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;|| &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;v:version&lt;&#x2F;span&gt;&lt;span&gt; &amp;lt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;700 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;|| &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;&amp;amp;cp
&lt;&#x2F;span&gt;&lt;span&gt;    finish
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;endif
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;let &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;g:loaded_xxx&lt;&#x2F;span&gt;&lt;span&gt; = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;1
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;command&lt;&#x2F;span&gt;&lt;span&gt;! -bang -complete=file -nargs=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;*&lt;&#x2F;span&gt;&lt;span&gt; Ls call &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;xxx#core#ls&lt;&#x2F;span&gt;&lt;span&gt;(&amp;lt;f-args&amp;gt;)
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h2 id=&quot;testing&quot;&gt;Testing.&lt;&#x2F;h2&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;Command. (in Vim)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    :Ls ~&#x2F;.vim&#x2F;conf.d&#x2F; ~&#x2F;.vim&#x2F;xxx&#x2F;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;Result.
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &#x2F;home&#x2F;pyoung&#x2F;.vim&#x2F;conf.d&#x2F;:
&lt;&#x2F;span&gt;&lt;span&gt;    total 20
&lt;&#x2F;span&gt;&lt;span&gt;    drwxrwxr-x 2 pyoung pyoung 4096  4월  7 00:54 .
&lt;&#x2F;span&gt;&lt;span&gt;    drwxr-xr-x 7 pyoung pyoung 4096  4월  7 03:59 ..
&lt;&#x2F;span&gt;&lt;span&gt;    -rw-rw-r-- 1 pyoung pyoung 2092  4월  7 00:27 00_neobundle.vim
&lt;&#x2F;span&gt;&lt;span&gt;    -rw-rw-r-- 1 pyoung pyoung 3518 11월 16 05:46 01_init.vim
&lt;&#x2F;span&gt;&lt;span&gt;    -rw-rw-r-- 1 pyoung pyoung   60  4월  7 00:54 02_tim.vim
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &#x2F;home&#x2F;pyoung&#x2F;.vim&#x2F;xxx&#x2F;:
&lt;&#x2F;span&gt;&lt;span&gt;    total 16
&lt;&#x2F;span&gt;&lt;span&gt;    drwxrwxr-x 4 pyoung pyoung 4096  4월  7 03:19 .
&lt;&#x2F;span&gt;&lt;span&gt;    drwxr-xr-x 7 pyoung pyoung 4096  4월  7 03:59 ..
&lt;&#x2F;span&gt;&lt;span&gt;    drwxrwxr-x 3 pyoung pyoung 4096  4월  7 00:54 autoload
&lt;&#x2F;span&gt;&lt;span&gt;    drwxrwxr-x 2 pyoung pyoung 4096  4월  7 03:28 plugin
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    Press ENTER or type command to continue
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h2 id=&quot;problem&quot;&gt;Problem.&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;캐쉬 문제.
&lt;ul&gt;
&lt;li&gt;2014.04.07 현재 캐쉬문제가 있다. 한번 컴파일이되면, 다음 변경시 재 컴파일이 안 된채로 에러를 뱉는 문제가 있다.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tpope&#x2F;timl&#x2F;issues&#x2F;12&quot;&gt;https:&#x2F;&#x2F;github.com&#x2F;tpope&#x2F;timl&#x2F;issues&#x2F;12&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;캐쉬 문제 해결.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;rm -rf ~&#x2F;.cache&#x2F;vim&#x2F;timl&#x2F;&lt;&#x2F;code&gt;로 캐쉬를 날려주자.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;tip&quot;&gt;Tip.&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;:Wepl&lt;&#x2F;code&gt;: 현재 파일을 로드하면서, repl을 띄움.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;:TLsource %&lt;&#x2F;code&gt;: 현재 파일을 다시 읽음.(이 역시 캐쉬문제가 발생하면 캐쉬파일 지워주는 수밖에..)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;reference&quot;&gt;Reference.&lt;&#x2F;h1&gt;
&lt;ul&gt;
&lt;li&gt;공식사이트:
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tpope&#x2F;timl&quot;&gt;https:&#x2F;&#x2F;github.com&#x2F;tpope&#x2F;timl&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;tslime2.vim:
&lt;ul&gt;
&lt;li&gt;vim에서 tmux에게 명령어를 보내주는 플러그인.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;sjl&#x2F;tslime2.vim&quot;&gt;https:&#x2F;&#x2F;github.com&#x2F;sjl&#x2F;tslime2.vim&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Unity UTF8 with BOM</title>
        <published>2013-07-04T00:00:00+00:00</published>
        <updated>2013-07-04T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://netpyoung.github.io/blog/unity_utf8_with_bom/" type="text/html"/>
        <id>https://netpyoung.github.io/blog/unity_utf8_with_bom/</id>
        
        <content type="html">&lt;h2 id=&quot;bomiran&quot;&gt;BOM이란?&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Byte_order_mark&quot;&gt;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Byte_order_mark&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;BOM이란 byte order mark의 약자로, 파일 혹은 스트림의 바이트 순서(엔디안)을 나타내기 위해 사용되는 Unicode 문자.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;utf-8yi-bomeun&quot;&gt;UTF-8의 BOM은?&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;EF BB BF&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;munjeneun&quot;&gt;문제는?&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;UTF8자체가 엔디안 문제가 생기지 않음. 즉 UTF8에는 BOM이 필요없다는 것.&lt;&#x2F;li&gt;
&lt;li&gt;Unity에서 기본으로 소스코드를 생성하면 UTF8 without BOM문서가 나옴.&lt;&#x2F;li&gt;
&lt;li&gt;근데, 뻐킹 유니티에서는 BOM이 없으면 코드를 이상하게 읽음. (한글 포함시)&lt;&#x2F;li&gt;
&lt;li&gt;tip) 꼭 한글 주석 달고 마침표로 끝을 알려주자.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;haegyeolcaegeun&quot;&gt;해결책은?&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;Unity에는 AssetPostprocessor란 클래스가 있고, OnPostprocessAllAssets란 메소드가 있는데, 이를 이용하면 파일 생성시 마다 BOM을 추가시켜줄 수 있다.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;inspired&quot;&gt;inspired&lt;&#x2F;h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;debuglog.tumblr.com&#x2F;post&#x2F;26550984743&#x2F;utf-8&quot;&gt;http:&#x2F;&#x2F;debuglog.tumblr.com&#x2F;post&#x2F;26550984743&#x2F;utf-8&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;sharkattack51&#x2F;Unity-EditorScript&#x2F;blob&#x2F;master&#x2F;AssetPostprocessUTF8Encode.cs&quot;&gt;https:&#x2F;&#x2F;github.com&#x2F;sharkattack51&#x2F;Unity-EditorScript&#x2F;blob&#x2F;master&#x2F;AssetPostprocessUTF8Encode.cs&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;example-source&quot;&gt;example source&lt;&#x2F;h2&gt;
&lt;p&gt;SimpleUtf8BOM.boo&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;ruby&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-ruby &quot;&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;UnityEngine
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ebcb8b;&quot;&gt;System&lt;&#x2F;span&gt;&lt;span&gt;.IO
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;class &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ebcb8b;&quot;&gt;SimpleUtf8BOM &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;AssetPostprocessor&lt;&#x2F;span&gt;&lt;span&gt;):
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;	static &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;OnPostprocessAllAssets&lt;&#x2F;span&gt;&lt;span&gt;(
&lt;&#x2F;span&gt;&lt;span&gt;		&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;imported_assets        as &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;string&lt;&#x2F;span&gt;&lt;span&gt;),
&lt;&#x2F;span&gt;&lt;span&gt;		&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;deleted_assets         as &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;string&lt;&#x2F;span&gt;&lt;span&gt;),
&lt;&#x2F;span&gt;&lt;span&gt;		&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;moved_assets           as &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;string&lt;&#x2F;span&gt;&lt;span&gt;),
&lt;&#x2F;span&gt;&lt;span&gt;		&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;moved_from_asset_paths as &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;string&lt;&#x2F;span&gt;&lt;span&gt;)) :
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;		&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;for&lt;&#x2F;span&gt;&lt;span&gt; asset &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;in&lt;&#x2F;span&gt;&lt;span&gt; imported_assets :
&lt;&#x2F;span&gt;&lt;span&gt;			checkAndWriteBOM(asset)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;	static &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;checkAndWriteBOM&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;fpath as string&lt;&#x2F;span&gt;&lt;span&gt;) :
&lt;&#x2F;span&gt;&lt;span&gt;		&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# check: is source file?
&lt;&#x2F;span&gt;&lt;span&gt;		ext = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ebcb8b;&quot;&gt;Path&lt;&#x2F;span&gt;&lt;span&gt;.GetExtension(fpath)
&lt;&#x2F;span&gt;&lt;span&gt;		&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;unless &lt;&#x2F;span&gt;&lt;span&gt;([&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;.cs&lt;&#x2F;span&gt;&lt;span&gt;&amp;#39;, &amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;.js&lt;&#x2F;span&gt;&lt;span&gt;&amp;#39;, &amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;.boo&lt;&#x2F;span&gt;&lt;span&gt;&amp;#39;]).Contains(ext) :
&lt;&#x2F;span&gt;&lt;span&gt;			&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;return&lt;&#x2F;span&gt;&lt;span&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;		&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# check: is with bom_utf8?
&lt;&#x2F;span&gt;&lt;span&gt;		fbytes = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ebcb8b;&quot;&gt;File&lt;&#x2F;span&gt;&lt;span&gt;.ReadAllBytes(fpath)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;		front_3bytes = fbytes[:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;3&lt;&#x2F;span&gt;&lt;span&gt;]
&lt;&#x2F;span&gt;&lt;span&gt;		bom_utf8     = array(byte, (&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0xEF&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0xBB&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0xBF&lt;&#x2F;span&gt;&lt;span&gt;))
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;		&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# write bom
&lt;&#x2F;span&gt;&lt;span&gt;		&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;unless&lt;&#x2F;span&gt;&lt;span&gt; front_3bytes == bom_utf8 :
&lt;&#x2F;span&gt;&lt;span&gt;			&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ebcb8b;&quot;&gt;File&lt;&#x2F;span&gt;&lt;span&gt;.WriteAllBytes(fpath, bom_utf8 + fbytes)
&lt;&#x2F;span&gt;&lt;span&gt;			&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ebcb8b;&quot;&gt;Debug&lt;&#x2F;span&gt;&lt;span&gt;.Log(&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;append bom complete : ${fpath}&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;)
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
</content>
        
    </entry>
</feed>